"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const chai_1 = require("chai");
require("mocha");
const mysensors_serial_1 = require("./mysensors-serial");
describe('Serial decode / encode', () => {
    let decode;
    beforeEach(() => {
        decode = new mysensors_serial_1.MysensorsSerial();
    });
    it('Should create correct decoded output when serial is received', () => {
        const msg = {
            payload: '1;2;3;0;5;6',
        };
        const expected = {
            ack: 0,
            childSensorId: 2,
            messageType: 3,
            nodeId: 1,
            payload: '6',
            subType: 5,
        };
        const out = decode.decode(msg);
        chai_1.expect(out).to.include(expected);
    });
    it('if not mysensors formatted input return undefined', () => {
        const msg = {
            payload: '200',
        };
        const out = decode.decode(msg);
        chai_1.expect(out).to.eq(undefined);
    });
    it('Encode to mysensors serial message', () => {
        const msg = {
            ack: 0,
            childSensorId: 2,
            messageType: 6,
            nodeId: 1,
            payload: '100',
            subType: 4,
        };
        const out = decode.encode(msg);
        chai_1.expect(out).to.include({ payload: '1;2;6;0;4;100' });
    });
});
